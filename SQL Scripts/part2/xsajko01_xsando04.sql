/*
File:       xsajko01_xsando04.sql
Authors:    Dominik Sajko (xsajko01), Daniela Sándorová (xsando04)
Date:       xx.03.2024
Descrition: This script initializes the database and uploads data.
*/

/* ER DIAGRAM TABLES */

/*
The generalization relationship was broken down into separate tables according to the 4th IDS 
presentation (option 2), because it minimizes the complexity of the database.
*/
CREATE TABLE Dealer (
    dealer_id INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    first_name VARCHAR(64) NOT NULL,
    surname VARCHAR(64) NOT NULL,
    birth_date DATE NOT NULL,
    CONSTRAINT dealer_pk PRIMARY KEY (dealer_id)
);

CREATE TABLE Jailer (
    jailer_id INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    jail_id INT NOT NULL,
    first_name VARCHAR(64) NOT NULL,
    surname VARCHAR(64) NOT NULL,
    birth_date DATE NOT NULL,
    CONSTRAINT jailer_pk PRIMARY KEY (jailer_id)
);

CREATE TABLE Customer (
    customer_id INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    jail_id INT NOT NULL,
    first_name VARCHAR(64) NOT NULL,
    surname VARCHAR(64) NOT NULL,
    birth_date DATE NOT NULL,
    cell_number INT,
    cell_type VARCHAR(256),
    CONSTRAINT customer_pk PRIMARY KEY (customer_id)
);

CREATE TABLE Item_order (
    order_id INT NOT NULL,
    customer_id INT NOT NULL,
    first_pastry_EAN INT NOT NULL,
    price FLOAT(2) NOT NULL,
    delivery_type VARCHAR(256) NOT NULL,
    delivery_date DATE,
    CONSTRAINT item_order_pk PRIMARY KEY (order_id),
    CONSTRAINT item_price_validity CHECK (price > 0)
);

CREATE TABLE Pastry (
    EAN INT NOT NULL,
    order_id INT NOT NULL,
    first_ingredient INT NOT NULL,
    weight INT NOT NULL, -- in grams
    pastry_type VARCHAR(256) NOT NULL,
    CONSTRAINT pastry_pk PRIMARY KEY (EAN),
    CONSTRAINT pastry_weight_validity CHECK (weight > 0)
);

CREATE TABLE Ingredient (
    ingredient_id INT NOT NULL,
    first_pastry INT NOT NULL,
    amount INT NOT NULL,
    price FLOAT(2) NOT NULL,
    CONSTRAINT ingredient_pk PRIMARY KEY (ingredient_id),
    CONSTRAINT ingredient_price_validity CHECK (price > 0),
    CONSTRAINT ingredient_amount_validity CHECK (amount > 0)
);

CREATE TABLE Allergen (
    allergen_name VARCHAR(32) NOT NULL,
    CONSTRAINT allergen_pk PRIMARY KEY (allergen_name)
);

CREATE TABLE Jail (
    jail_id INT NOT NULL,
    first_shift_id INT NOT NULL,
    delivery_zone_id INT NOT NULL,
    address VARCHAR(256) NOT NULL,
    CONSTRAINT jail_pk PRIMARY KEY (jail_id)
);

CREATE TABLE Shift (
    shift_id INT NOT NULL,
    jail_id INT NOT NULL,
    first_jailer INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    CONSTRAINT shift_pk PRIMARY KEY (shift_id),
    CONSTRAINT shift_time_validity CHECK (start_time < end_time)
);

CREATE TABLE Delivery_zone (
    delivery_zone_id INT NOT NULL,
    dealer_id INT NOT NULL,
    CONSTRAINT delivery_zone_pk PRIMARY KEY (delivery_zone_id)
);

CREATE TABLE Backed_item (
    backed_item_id INT NOT NULL,
    first_pastry INT NOT NULL,
    weight INT NOT NULL,
    CONSTRAINT backed_item_pk PRIMARY KEY (backed_item_id),
    CONSTRAINT backed_item_weight_validity CHECK (weight > 0)
);

/* ASSOCIATIVE TABLES */

CREATE TABLE Dealer_Jailer (
    dealer_id INT NOT NULL,
    jailer_id INT NOT NULL
);

CREATE TABLE Jailer_Shift (
    jailer_id INT NOT NULL,
    shift_id INT NOT NULL,
    CONSTRAINT jailer_shift_pk PRIMARY KEY (jailer_id, shift_id)
);

CREATE TABLE Backed_item_Pastry (
    backed_item_id INT NOT NULL,
    EAN INT NOT NULL,
    CONSTRAINT backed_item_Pastry_pk PRIMARY KEY (backed_item_id, EAN)
);

CREATE TABLE Ingredient_Pastry (
    ingredient_id INT NOT NULL,
    EAN INT NOT NULL,
    CONSTRAINT ingredient_Pastry_pk PRIMARY KEY (ingredient_id, EAN)
);

CREATE TABLE Ingredient_Allergen (
    ingredient_id INT NOT NULL,
    allergen_name VARCHAR(32) NOT NULL
);

/* FOREIGN KEY SET UP */

/* ER tables */
ALTER TABLE Jailer ADD CONSTRAINT jailer_jail_fk FOREIGN KEY (jail_id) REFERENCES Jail(jail_id);
ALTER TABLE Customer ADD CONSTRAINT customer_jail_fk FOREIGN KEY (jail_id) REFERENCES Jail(jail_id);
ALTER TABLE Item_order ADD CONSTRAINT item_order_customer_fk FOREIGN KEY (customer_id) REFERENCES Customer(customer_id);
ALTER TABLE Pastry ADD CONSTRAINT pastry_order_fk FOREIGN KEY (order_id) REFERENCES Item_order(order_id);
ALTER TABLE Jail ADD CONSTRAINT jail_delivery_zone_fk FOREIGN KEY (delivery_zone_id) REFERENCES Delivery_zone(delivery_zone_id);
ALTER TABLE Shift ADD CONSTRAINT shift_jail_fk FOREIGN KEY (jail_id) REFERENCES Jail(jail_id);
ALTER TABLE Delivery_zone ADD CONSTRAINT delivery_zone_dealer_fk FOREIGN KEY (dealer_id) REFERENCES Dealer(dealer_id);

/* Associative tables */
ALTER TABLE Dealer_Jailer ADD CONSTRAINT dealer_jailer_dealer_fk FOREIGN KEY (dealer_id) REFERENCES Dealer(dealer_id);
ALTER TABLE Dealer_Jailer ADD CONSTRAINT dealer_jailer_jailer_fk FOREIGN KEY (jailer_id) REFERENCES Jailer(jailer_id);

ALTER TABLE Jailer_Shift ADD CONSTRAINT jailer_shift_jailer_fk FOREIGN KEY (jailer_id) REFERENCES Jailer(jailer_id);
ALTER TABLE Jailer_Shift ADD CONSTRAINT jailer_shift_shift_fk FOREIGN KEY (shift_id) REFERENCES Shift(shift_id);

ALTER TABLE Backed_item_Pastry ADD CONSTRAINT backed_item_backed_item_fk FOREIGN KEY (backed_item_id) REFERENCES Backed_item(backed_item_id);
ALTER TABLE Backed_item_Pastry ADD CONSTRAINT backed_item_ean_fk FOREIGN KEY (EAN) REFERENCES Pastry(EAN);

ALTER TABLE Ingredient_Pastry ADD CONSTRAINT ingredient_pastry_ingredient_fk FOREIGN KEY (ingredient_id) REFERENCES Ingredient(ingredient_id);
ALTER TABLE Ingredient_Pastry ADD CONSTRAINT ingredient_pastry_ean_fk FOREIGN KEY (EAN) REFERENCES Pastry(EAN);

ALTER TABLE Ingredient_Allergen ADD CONSTRAINT ingredient_allergen_ingredient_fk FOREIGN KEY (ingredient_id) REFERENCES Ingredient(ingredient_id);
ALTER TABLE Ingredient_Allergen ADD CONSTRAINT ingredient_allergen_allergen_name_fk FOREIGN KEY (allergen_name) REFERENCES Allergen(allergen_name);

/* At least one cardinality */
ALTER TABLE Backed_item ADD CONSTRAINT backed_item_first_pastry FOREIGN KEY (backed_item_id, first_pastry) REFERENCES Backed_item_Pastry(backed_item_id, EAN);
ALTER TABLE Pastry ADD CONSTRAINT pastry_first_ingredient FOREIGN KEY (EAN, first_ingredient) REFERENCES Ingredient_Pastry(ingredient_id, EAN);
ALTER TABLE Ingredient ADD CONSTRAINT ingredient_first_pastry FOREIGN KEY (ingredient_id, first_pastry) REFERENCES Ingredient_Pastry(ingredient_id, EAN);
ALTER TABLE Shift ADD CONSTRAINT shift_first_jailer FOREIGN KEY (shift_id, first_jailer) REFERENCES Jailer_Shift(shift_id, jailer_id);
ALTER TABLE Item_order ADD CONSTRAINT item_order_first_pastry_EAN FOREIGN KEY (first_pastry_EAN) REFERENCES Pastry(EAN);
ALTER TABLE Jail ADD CONSTRAINT jail_first_shift_fk FOREIGN KEY (first_shift_id) REFERENCES Shift(shift_id);

/* INSERT DATA TO DATABASE */

--tu bude Danka kúzliť
--čáry máry